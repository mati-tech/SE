В языке С++ реальному объекту из предметной области ставится в соответствие виртуальный объект. Средствами языка реализуется жизненный цикл виртуального объекта по аналогии жизненного цикла объекта из предметной области. Схемы этих жизненных циклов совпадают

Схема жизненного цикла виртуального объекта.

Описание.
Класс, структура, объединение	 	Старт объекта	 	Остановка объекта	 	Уничтожение
 	Создание.
Конструктор	 	Функционирование	 	Демонтаж.
Деструктор	 
Реализация жизненного цикла виртуального объекта на языке С++.

Описание	Класс, структура, объединение
Создание	Выделение памяти под объект.
Отработка конструктора объекта, исходная инициализация свойств объекта.
Завершение работы конструктора означает, что объект создан.
Старт объекта	Готовность объекта к функционированию, после завершения работы конструктора.
Функционирование	Участие объекта в работе (в алгоритме) приложения.
Остановка	Вызов деструктора объекта.
Демонтаж	Отработка деструктора объекта
Уничтожение	Освобождение выделенной под объект памяти.
Описание объекта посредством класса
Описание класса состоит из двух частей: заголовочного и реализации.
Синтаксис описания заголовочной части класса:


class  «имя класса» {
[private:]
    «список скрытых элементов класса»
public:
    «список доступных элементов класса»
protected:
    «список защищенных элементов класса»
};

имя класса     ::= идентификатор
элемент класса ::= описание свойства (поле, переменная)
               ::= описание заголовка метода
Синтаксис описания заголовка метода:

«тип возвращаемого значения» «имя метода» ( [список параметров] );
Часть реализации содержит описание методов класса. Синтаксис описания метода:

«тип возвращаемого значения» «имя класса» :: «имя метода» ( [список параметров] )
{
    // тело метода (код алгоритма метода)
}
Здесь «имя класса» — это имя того класса, которому принадлежит метод. А синтаксическая конструкция «имя класса» :: задает пространство имен класса. Метод, имя которого совпадает с именем класса, называется конструктором.

Алгоритмический язык С++ является расширением алгоритмического языка С. Для преемственности программных кодов на С в состав С++ естественно оставлены описания структур и объединений. При этом, эти описания расширены до мощности описания класса. Разница только в том, что по умолчанию элементы структуры и объединения принадлежат к разделу доступных элементов.

Описание объекта посредством структуры:

struct «имя структуры» {
[public:]
    «список доступных элементов структуры»
private:
    «список скрытых элементов структуры»
protected:
    «список защищенных элементов структуры»
};
Описание объекта посредством объединения

union «имя объединения» {
[public:]
    «список доступных скрытых элементов объединения»
private:
    «список скрытых элементов объединения»
protected:
    «список защищенных элементов объединения»
};
Способы создания объекта.

1. Посредством оператора объявления. Синтаксис:

«имя класса | структуры | объединения» «имя объекта» [,«имя объекта 1» … ];
Где: «имя объекта»   ::= идентификатор
     «имя объекта 1» ::= идентификатор
Ссылка на созданный объект ставиться в соответствии идентификатору.

2. Посредством использования оператора-функции new. Синтаксис:

new «имя | структуры | объединения»
При использовании оператора функции new в составе оператора присвоения, она вернет адрес созданного объекта. Синтаксис:

«указатель на объект класса | структуры | объединения» = new «имя класса | структуры | объединения»;